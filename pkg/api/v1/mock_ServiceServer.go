// Code generated by mockery 2.7.5. DO NOT EDIT.

package v1

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockServiceServer is an autogenerated mock type for the ServiceServer type
type MockServiceServer struct {
	mock.Mock
}

// Call provides a mock function with given fields: _a0, _a1
func (_m *MockServiceServer) Call(_a0 context.Context, _a1 *CallRequest) (*CallResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *CallResponse
	if rf, ok := ret.Get(0).(func(context.Context, *CallRequest) *CallResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*CallResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *CallRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Init provides a mock function with given fields: _a0, _a1
func (_m *MockServiceServer) Init(_a0 context.Context, _a1 *InitRequest) (*InitResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *InitResponse
	if rf, ok := ret.Get(0).(func(context.Context, *InitRequest) *InitResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*InitResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *InitRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
